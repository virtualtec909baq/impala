#filterrific_results
  table.table.table-striped.table-hover.table-bordered
    thead
    tr
      th 
        =  sort_link @search, :product, t('.product')
      th 
        = sort_link @search, :origins, t('.origins')
      th 
        = sort_link @search, :destination, t('.destination')
      th 
        = sort_link @search, :volumen,t('.volumen')
      th 
        = sort_link @search, :price,t('.price')
      th 
        = sort_link @search, :service_start_date, t('.service_start_date')
      th 
        = sort_link @search, :service_finish_date, t('.service_finish_date')
      th 
        = sort_link @search, :offer_start_date, t('.offer_start_date')
      th 
        = sort_link @search, :offer_finish_date, t('.offer_finish_date')
      - if current_user.kind == "admin"
        th
        th
        th
    
    - @offers.each do |offer| 
      tr class=('danger' if offer.status == 2)
        td
          - if current_user.kind == "admin"
            span.badge.progress-bar-success
              = user_count(offer)
          = link_to(offer.product, offer_path(offer.id), :data => {:date => offer.offer_finish_date}, :class => "offer_id",:id => 'my-link')
        td
          = offer.origins
        td
          = offer.destination
        td.w90
          = "#{offer.volumen} #{offer.unit}"
        td.w90
          = number_to_currency_br(offer.price)
        td
          = offer.service_start_date.strftime("%d-%m-%Y")
        td
          = offer.service_finish_date.strftime("%d-%m-%Y")
        td
          = offer.offer_start_date.strftime("%d-%m-%Y")
        td
          = offer.offer_finish_date.strftime("%d-%m-%Y")
        - if current_user.kind == "admin"
          td
            = link_to edit_offer_path(offer)
                span.glyphicon.glyphicon-pencil
          td
            = link_to offer, data: {:confirm => t('.delete')}, :method => :delete do
              span.glyphicon.glyphicon-trash
          td
            button.btn.btn-link data-toggle="modal" data-target="#myModal#{offer.id}" 
                span.glyphicon.glyphicon-eye-open
            = render(partial: 'offers/modal',locals: { offer: offer })
  = will_paginate @offers, :locals => { :offers => @offers }, renderer: BootstrapPagination::Rails

